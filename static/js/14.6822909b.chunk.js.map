{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-use/lib/useSpring.js","../node_modules/rebound/dist/rebound.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/react-use/node_modules/tslib/tslib.es6.js","../node_modules/react-use/esm/useDrop.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","exports","react_1","require","rebound_1","default","targetValue","tension","friction","_a","useState","spring","setSpring","_b","setValue","listener","useMemo","onSpringUpdate","currentSpring","newValue","getCurrentValue","useEffect","newSpring","SpringSystem","createSpring","setCurrentValue","addListener","removeListener","setEndValue","module","_onFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","process","title","setImmediate","_onFrame$1","callback","setTimeout","concat","prototype","slice","onFrame","func","removeFirst","array","item","idx","indexOf","splice","colorCache","hexToRGB","colorString","normalizedColor","replace","parts","match","Error","ret","r","parseInt","g","b","rgbToHex","rNum","gNum","bNum","toString","util","freeze","bind","context","_len","outerArgs","_key","_len2","innerArgs","_key2","call","extend","hasOwnProperty","mapValueInRange","fromLow","fromHigh","toLow","toHigh","MathUtil","interpolateColor","val","startColorStr","endColorStr","undefined","asRGB","startColor","endColor","Math","floor","degreesToRadians","deg","PI","radiansToDegrees","rad","tensionFromOrigamiValue","oValue","frictionFromOrigamiValue","OrigamiValueConverter","origamiValueFromTension","origamiFromFriction","classCallCheck","instance","Constructor","_extends","assign","AnimationLooper","this","springSystem","run","getSpringSystem","loop","Date","now","SimulationLooper","timestep","time","running","getIsIdle","SteppingSimulationLooper","step","Loopers","BouncyConversion","bounciness","speed","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","endValue","n","start","end","linearInterpolation","t","b3Friction1","x","pow","b3Friction2","b3Friction3","SpringConfig","fromOrigamiTensionAndFriction","fromBouncinessAndSpeed","bouncyConversion","coastingConfigWithOrigamiFriction","DEFAULT_ORIGAMI_SPRING_CONFIG","PhysicsState","position","velocity","Spring","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_id","_ID","_springSystem","destroy","deregisterSpring","getId","setSpringConfig","springConfig","_springConfig","getSpringConfig","currentValue","skipSetAtRest","setAtRest","notifyPositionUpdated","getStartValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","state","abs","isAtRest","activateSpring","len","onChange","onSpringEndStateChange","getEndValue","setVelocity","getVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","advance","realDeltaTime","adjustedDeltaTime","MAX_DELTA_TIME_SEC","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","SOLVER_TIMESTEP_SEC","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","getListeners","newListener","listenerToRemove","removeAllListeners","currentValueIsApproximately","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","setLooper","createSpringWithConfig","createSpringWithBouncinessAndSpeed","registerSpring","getSpringById","id","getAllSprings","vals","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","factory","scope","global","self","Function","Timeout","clearFn","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","event","data","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","args","task","create","React","useCallback","noop","useDrop","options","onFiles","onText","onUri","over","setOverRaw","setOver","dataTransfer","uri","getData","files","clipboardData","text","createProcess","onDragOver","preventDefault","onDragEnter","onDragLeave","onDragExit","onDrop","onPaste","removeEventListener","il","k","a","j","jl","__spreadArrays"],"mappings":"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","file":"static/js/14.6822909b.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable */\nvar react_1 = require(\"react\");\nvar rebound_1 = require(\"rebound\");\nvar useSpring = function (targetValue, tension, friction) {\n    if (targetValue === void 0) { targetValue = 0; }\n    if (tension === void 0) { tension = 50; }\n    if (friction === void 0) { friction = 3; }\n    var _a = react_1.useState(null), spring = _a[0], setSpring = _a[1];\n    var _b = react_1.useState(targetValue), value = _b[0], setValue = _b[1];\n    // memoize listener to being able to unsubscribe later properly, otherwise\n    // listener fn will be different on each re-render and wouldn't unsubscribe properly.\n    var listener = react_1.useMemo(function () { return ({\n        onSpringUpdate: function (currentSpring) {\n            var newValue = currentSpring.getCurrentValue();\n            setValue(newValue);\n        },\n    }); }, []);\n    react_1.useEffect(function () {\n        if (!spring) {\n            var newSpring = new rebound_1.SpringSystem().createSpring(tension, friction);\n            newSpring.setCurrentValue(targetValue);\n            setSpring(newSpring);\n            newSpring.addListener(listener);\n        }\n        return function () {\n            if (spring) {\n                spring.removeListener(listener);\n                setSpring(null);\n            }\n        };\n    }, [tension, friction, spring]);\n    react_1.useEffect(function () {\n        if (spring) {\n            spring.setEndValue(targetValue);\n        }\n    }, [targetValue]);\n    return value;\n};\nexports.default = useSpring;\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.rebound = factory());\n}(this, (function () { 'use strict';\n\nvar _onFrame = void 0;\nif (typeof window !== 'undefined') {\n  _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;\n}\n\nif (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n  _onFrame = setImmediate;\n}\n\n_onFrame = _onFrame || function (callback) {\n  window.setTimeout(callback, 1000 / 60);\n};\n\nvar _onFrame$1 = _onFrame;\n\n/* eslint-disable flowtype/no-weak-types */\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\n// Bind a function to a context object.\nfunction bind(func, context) {\n  for (var _len = arguments.length, outerArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    outerArgs[_key - 2] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, innerArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      innerArgs[_key2] = arguments[_key2];\n    }\n\n    func.apply(context, concat.call(outerArgs, slice.call(innerArgs)));\n  };\n}\n\n// Add all the properties in the source to the target.\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\n// Cross browser/node timer functions.\nfunction onFrame(func) {\n  return _onFrame$1(func);\n}\n\n// Lop off the first occurence of the reference in the Array.\nfunction removeFirst(array, item) {\n  var idx = array.indexOf(item);\n  idx !== -1 && array.splice(idx, 1);\n}\n\nvar colorCache = {};\n/**\n * Converts a hex-formatted color string to its rgb-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString A hex-formatted color string\n * @return An rgb-formatted color string\n */\nfunction hexToRGB(colorString) {\n  if (colorCache[colorString]) {\n    return colorCache[colorString];\n  }\n  var normalizedColor = colorString.replace('#', '');\n  if (normalizedColor.length === 3) {\n    normalizedColor = normalizedColor[0] + normalizedColor[0] + normalizedColor[1] + normalizedColor[1] + normalizedColor[2] + normalizedColor[2];\n  }\n  var parts = normalizedColor.match(/.{2}/g);\n  if (!parts || parts.length < 3) {\n    throw new Error('Expected a color string of format #rrggbb');\n  }\n\n  var ret = {\n    r: parseInt(parts[0], 16),\n    g: parseInt(parts[1], 16),\n    b: parseInt(parts[2], 16)\n  };\n\n  colorCache[colorString] = ret;\n  return ret;\n}\n\n/**\n * Converts a rgb-formatted color string to its hex-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString An rgb-formatted color string\n * @return A hex-formatted color string\n */\nfunction rgbToHex(rNum, gNum, bNum) {\n  var r = rNum.toString(16);\n  var g = gNum.toString(16);\n  var b = bNum.toString(16);\n  r = r.length < 2 ? '0' + r : r;\n  g = g.length < 2 ? '0' + g : g;\n  b = b.length < 2 ? '0' + b : b;\n  return '#' + r + g + b;\n}\n\nvar util = Object.freeze({\n\tbind: bind,\n\textend: extend,\n\tonFrame: onFrame,\n\tremoveFirst: removeFirst,\n\thexToRGB: hexToRGB,\n\trgbToHex: rgbToHex\n});\n\n/**\n * This helper function does a linear interpolation of a value from\n * one range to another. This can be very useful for converting the\n * motion of a Spring to a range of UI property values. For example a\n * spring moving from position 0 to 1 could be interpolated to move a\n * view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n * position of the `Spring` just needs to be run through this method\n * taking its input range in the _from_ parameters with the property\n * animation range in the _to_ parameters.\n * @public\n */\nfunction mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {\n  var fromRangeSize = fromHigh - fromLow;\n  var toRangeSize = toHigh - toLow;\n  var valueScale = (value - fromLow) / fromRangeSize;\n  return toLow + valueScale * toRangeSize;\n}\n\n/**\n * Interpolate two hex colors in a 0 - 1 range or optionally provide a\n * custom range with fromLow,fromHight. The output will be in hex by default\n * unless asRGB is true in which case it will be returned as an rgb string.\n *\n * @public\n * @param asRGB Whether to return an rgb-style string\n * @return A string in hex color format unless asRGB is true, in which case a string in rgb format\n */\nfunction interpolateColor(val, startColorStr, endColorStr) {\n  var fromLow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var fromHigh = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var asRGB = arguments[5];\n\n  var startColor = hexToRGB(startColorStr);\n  var endColor = hexToRGB(endColorStr);\n  var r = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\n  var g = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\n  var b = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\n  if (asRGB) {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else {\n    return rgbToHex(r, g, b);\n  }\n}\n\nfunction degreesToRadians(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction radiansToDegrees(rad) {\n  return rad * 180 / Math.PI;\n}\n\nvar MathUtil = Object.freeze({\n\tmapValueInRange: mapValueInRange,\n\tinterpolateColor: interpolateColor,\n\tdegreesToRadians: degreesToRadians,\n\tradiansToDegrees: radiansToDegrees\n});\n\n// Math for converting from\n// [Origami](http://facebook.github.io/origami/) to\n// [Rebound](http://facebook.github.io/rebound).\n// You mostly don't need to worry about this, just use\n// SpringConfig.fromOrigamiTensionAndFriction(v, v);\n\nfunction tensionFromOrigamiValue(oValue) {\n  return (oValue - 30.0) * 3.62 + 194.0;\n}\n\nfunction origamiValueFromTension(tension) {\n  return (tension - 194.0) / 3.62 + 30.0;\n}\n\nfunction frictionFromOrigamiValue(oValue) {\n  return (oValue - 8.0) * 3.0 + 25.0;\n}\n\nfunction origamiFromFriction(friction) {\n  return (friction - 25.0) / 3.0 + 8.0;\n}\n\nvar OrigamiValueConverter = Object.freeze({\n\ttensionFromOrigamiValue: tensionFromOrigamiValue,\n\torigamiValueFromTension: origamiValueFromTension,\n\tfrictionFromOrigamiValue: frictionFromOrigamiValue,\n\torigamiFromFriction: origamiFromFriction\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar AnimationLooper = function () {\n  function AnimationLooper() {\n    classCallCheck(this, AnimationLooper);\n    this.springSystem = null;\n  }\n\n  AnimationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    onFrame(function () {\n      springSystem.loop(Date.now());\n    });\n  };\n\n  return AnimationLooper;\n}();\n\n/**\n * Resolves the SpringSystem to a resting state in a\n * tight and blocking loop. This is useful for synchronously generating\n * pre-recorded animations that can then be played on a timing loop later.\n * Sometimes this lead to better performance to pre-record a single spring\n * curve and use it to drive many animations; however, it can make dynamic\n * response to user input a bit trickier to implement.\n * @public\n */\nvar SimulationLooper = function () {\n  function SimulationLooper(timestep) {\n    classCallCheck(this, SimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n\n    this.timestep = timestep || 16.667;\n  }\n\n  SimulationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    while (!springSystem.getIsIdle()) {\n      springSystem.loop(this.time += this.timestep);\n    }\n    this.running = false;\n  };\n\n  return SimulationLooper;\n}();\n\n/**\n * Resolves the SpringSystem one step at a\n * time controlled by an outside loop. This is useful for testing and\n * verifying the behavior of a SpringSystem or if you want to control your own\n * timing loop for some reason e.g. slowing down or speeding up the\n * simulation.\n * @public\n */\nvar SteppingSimulationLooper = function () {\n  function SteppingSimulationLooper() {\n    classCallCheck(this, SteppingSimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n  }\n\n  SteppingSimulationLooper.prototype.run = function run() {}\n  // this.run is NOOP'd here to allow control from the outside using\n  // this.step.\n\n\n  // Perform one step toward resolving the SpringSystem.\n  ;\n\n  SteppingSimulationLooper.prototype.step = function step(timestep) {\n    var springSystem = getSpringSystem.call(this);\n    springSystem.loop(this.time += timestep);\n  };\n\n  return SteppingSimulationLooper;\n}();\n\nfunction getSpringSystem() {\n  if (this.springSystem == null) {\n    throw new Error('cannot run looper without a springSystem');\n  }\n  return this.springSystem;\n}\n\n\n\nvar Loopers = Object.freeze({\n\tAnimationLooper: AnimationLooper,\n\tSimulationLooper: SimulationLooper,\n\tSteppingSimulationLooper: SteppingSimulationLooper\n});\n\n/**\n * Provides math for converting from Origami PopAnimation\n * config values to regular Origami tension and friction values. If you are\n * trying to replicate prototypes made with PopAnimation patches in Origami,\n * then you should create your springs with\n * SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n * internally to create a spring to match the provided PopAnimation\n * configuration from Origami.\n */\nvar BouncyConversion = function () {\n  function BouncyConversion(bounciness, speed) {\n    classCallCheck(this, BouncyConversion);\n\n    this.bounciness = bounciness;\n    this.speed = speed;\n\n    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n    b = this.projectNormal(b, 0.0, 0.8);\n    var s = this.normalize(speed / 1.7, 0, 20.0);\n\n    this.bouncyTension = this.projectNormal(s, 0.5, 200);\n    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);\n  }\n\n  BouncyConversion.prototype.normalize = function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  };\n\n  BouncyConversion.prototype.projectNormal = function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  };\n\n  BouncyConversion.prototype.linearInterpolation = function linearInterpolation(t, start, end) {\n    return t * end + (1.0 - t) * start;\n  };\n\n  BouncyConversion.prototype.quadraticOutInterpolation = function quadraticOutInterpolation(t, start, end) {\n    return this.linearInterpolation(2 * t - t * t, start, end);\n  };\n\n  BouncyConversion.prototype.b3Friction1 = function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  };\n\n  BouncyConversion.prototype.b3Friction2 = function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  };\n\n  BouncyConversion.prototype.b3Friction3 = function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  };\n\n  BouncyConversion.prototype.b3Nobounce = function b3Nobounce(tension) {\n    var friction = 0;\n    if (tension <= 18) {\n      friction = this.b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      friction = this.b3Friction2(tension);\n    } else {\n      friction = this.b3Friction3(tension);\n    }\n    return friction;\n  };\n\n  return BouncyConversion;\n}();\n\n/**\n * Maintains a set of tension and friction constants\n * for a Spring. You can use fromOrigamiTensionAndFriction to convert\n * values from the [Origami](http://facebook.github.io/origami/)\n * design tool directly to Rebound spring constants.\n * @public\n */\n\nvar SpringConfig = function () {\n\n  /**\n   * Convert an origami Spring tension and friction to Rebound spring\n   * constants. If you are prototyping a design with Origami, this\n   * makes it easy to make your springs behave exactly the same in\n   * Rebound.\n   * @public\n   */\n  SpringConfig.fromOrigamiTensionAndFriction = function fromOrigamiTensionAndFriction(tension, friction) {\n    return new SpringConfig(tensionFromOrigamiValue(tension), frictionFromOrigamiValue(friction));\n  };\n\n  /**\n   * Convert an origami PopAnimation Spring bounciness and speed to Rebound\n   * spring constants. If you are using PopAnimation patches in Origami, this\n   * utility will provide springs that match your prototype.\n   * @public\n   */\n\n\n  SpringConfig.fromBouncinessAndSpeed = function fromBouncinessAndSpeed(bounciness, speed) {\n    var bouncyConversion = new BouncyConversion(bounciness, speed);\n    return SpringConfig.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);\n  };\n\n  /**\n   * Create a SpringConfig with no tension or a coasting spring with some\n   * amount of Friction so that it does not coast infininitely.\n   * @public\n   */\n\n\n  SpringConfig.coastingConfigWithOrigamiFriction = function coastingConfigWithOrigamiFriction(friction) {\n    return new SpringConfig(0, frictionFromOrigamiValue(friction));\n  };\n\n  function SpringConfig(tension, friction) {\n    classCallCheck(this, SpringConfig);\n\n    this.tension = tension;\n    this.friction = friction;\n  }\n\n  return SpringConfig;\n}();\n\nSpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n/**\n * Consists of a position and velocity. A Spring uses\n * this internally to keep track of its current and prior position and\n * velocity values.\n */\nvar PhysicsState = function PhysicsState() {\n  classCallCheck(this, PhysicsState);\n  this.position = 0;\n  this.velocity = 0;\n};\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\n\nvar Spring = function () {\n  function Spring(springSystem) {\n    classCallCheck(this, Spring);\n    this.listeners = [];\n    this._startValue = 0;\n    this._currentState = new PhysicsState();\n    this._displacementFromRestThreshold = 0.001;\n    this._endValue = 0;\n    this._overshootClampingEnabled = false;\n    this._previousState = new PhysicsState();\n    this._restSpeedThreshold = 0.001;\n    this._tempState = new PhysicsState();\n    this._timeAccumulator = 0;\n    this._wasAtRest = true;\n\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n\n\n  Spring.prototype.destroy = function destroy() {\n    this.listeners = [];\n    this._springSystem.deregisterSpring(this);\n  };\n\n  /**\n   * Get the id of the spring, which can be used to retrieve it from\n   * the SpringSystems it participates in later.\n   * @public\n   */\n\n\n  Spring.prototype.getId = function getId() {\n    return this._id;\n  };\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n\n\n  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {\n    this._springConfig = springConfig;\n    return this;\n  };\n\n  /**\n   * Retrieve the SpringConfig used by this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getSpringConfig = function getSpringConfig() {\n    return this._springConfig;\n  };\n\n  /**\n   * Set the current position of this Spring. Listeners will be updated\n   * with this value immediately. If the rest or `endValue` is not\n   * updated to match this value, then the spring will be dispalced and\n   * the SpringSystem will start to loop to restore the spring to the\n   * `endValue`.\n   *\n   * A common pattern is to move a Spring around without animation by\n   * calling.\n   *\n   * ```\n   * spring.setCurrentValue(n).setAtRest();\n   * ```\n   *\n   * This moves the Spring to a new position `n`, sets the endValue\n   * to `n`, and removes any velocity from the `Spring`. By doing\n   * this you can allow the `SpringListener` to manage the position\n   * of UI elements attached to the spring even when moving without\n   * animation. For example, when dragging an element you can\n   * update the position of an attached view through a spring\n   * by calling `spring.setCurrentValue(x)`. When\n   * the gesture ends you can update the Springs\n   * velocity and endValue\n   * `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n   * to cause it to naturally animate the UI element to the resting\n   * position taking into account existing velocity. The codepaths for\n   * synchronous movement and spring driven animation can\n   * be unified using this technique.\n   * @public\n   */\n\n\n  Spring.prototype.setCurrentValue = function setCurrentValue(currentValue, skipSetAtRest) {\n    this._startValue = currentValue;\n    this._currentState.position = currentValue;\n    if (!skipSetAtRest) {\n      this.setAtRest();\n    }\n    this.notifyPositionUpdated(false, false);\n    return this;\n  };\n\n  /**\n   * Get the position that the most recent animation started at. This\n   * can be useful for determining the number off oscillations that\n   * have occurred.\n   * @public\n   */\n\n\n  Spring.prototype.getStartValue = function getStartValue() {\n    return this._startValue;\n  };\n\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentValue = function getCurrentValue() {\n    return this._currentState.position;\n  };\n\n  /**\n   * Get the absolute distance of the Spring from its resting endValue\n   * position.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentDisplacementDistance = function getCurrentDisplacementDistance() {\n    return this.getDisplacementDistanceForState(this._currentState);\n  };\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n\n\n  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position);\n  };\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n\n  Spring.prototype.setEndValue = function setEndValue(endValue) {\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this;\n    }\n    this._startValue = this.getCurrentValue();\n    this._endValue = endValue;\n    this._springSystem.activateSpring(this.getId());\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      var onChange = listener.onSpringEndStateChange;\n      onChange && onChange(this);\n    }\n    return this;\n  };\n\n  /**\n   * Retrieve the endValue or resting position of this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getEndValue = function getEndValue() {\n    return this._endValue;\n  };\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n\n\n  Spring.prototype.setVelocity = function setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this;\n    }\n    this._currentState.velocity = velocity;\n    this._springSystem.activateSpring(this.getId());\n    return this;\n  };\n\n  /**\n   * Get the current velocity of the Spring, in pixels per second.\n   * @public\n   */\n\n\n  Spring.prototype.getVelocity = function getVelocity() {\n    return this._currentState.velocity;\n  };\n\n  /**\n   * Set a threshold value for the movement speed of the Spring below\n   * which it will be considered to be not moving or resting.\n   * @public\n   */\n\n\n  Spring.prototype.setRestSpeedThreshold = function setRestSpeedThreshold(restSpeedThreshold) {\n    this._restSpeedThreshold = restSpeedThreshold;\n    return this;\n  };\n\n  /**\n   * Retrieve the rest speed threshold for this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestSpeedThreshold = function getRestSpeedThreshold() {\n    return this._restSpeedThreshold;\n  };\n\n  /**\n   * Set a threshold value for displacement below which the Spring\n   * will be considered to be not displaced i.e. at its resting\n   * `endValue`.\n   * @public\n   */\n\n\n  Spring.prototype.setRestDisplacementThreshold = function setRestDisplacementThreshold(displacementFromRestThreshold) {\n    this._displacementFromRestThreshold = displacementFromRestThreshold;\n  };\n\n  /**\n   * Retrieve the rest displacement threshold for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestDisplacementThreshold = function getRestDisplacementThreshold() {\n    return this._displacementFromRestThreshold;\n  };\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n\n\n  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled;\n    return this;\n  };\n\n  /**\n   * Check if overshoot clamping is enabled for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershootClampingEnabled = function isOvershootClampingEnabled() {\n    return this._overshootClampingEnabled;\n  };\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershooting = function isOvershooting() {\n    var start = this._startValue;\n    var end = this._endValue;\n    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\n  };\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.advance = function advance(time, realDeltaTime) {\n    var isAtRest = this.isAtRest();\n\n    if (isAtRest && this._wasAtRest) {\n      return;\n    }\n\n    var adjustedDeltaTime = realDeltaTime;\n    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n    }\n\n    this._timeAccumulator += adjustedDeltaTime;\n\n    var tension = this._springConfig.tension;\n    var friction = this._springConfig.friction;\n    var position = this._currentState.position;\n    var velocity = this._currentState.velocity;\n    var tempPosition = this._tempState.position;\n    var tempVelocity = this._tempState.velocity;\n    var aVelocity = void 0;\n    var aAcceleration = void 0;\n    var bVelocity = void 0;\n    var bAcceleration = void 0;\n    var cVelocity = void 0;\n    var cAcceleration = void 0;\n    var dVelocity = void 0;\n    var dAcceleration = void 0;\n    var dxdt = void 0;\n    var dvdt = void 0;\n\n    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position;\n        this._previousState.velocity = velocity;\n      }\n\n      aVelocity = velocity;\n      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\n\n      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      bVelocity = tempVelocity;\n      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      cVelocity = tempVelocity;\n      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;\n      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;\n      dVelocity = tempVelocity;\n      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n\n      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n    }\n\n    this._tempState.position = tempPosition;\n    this._tempState.velocity = tempVelocity;\n\n    this._currentState.position = position;\n    this._currentState.velocity = velocity;\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n    }\n\n    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue;\n        this._currentState.position = this._endValue;\n      } else {\n        this._endValue = this._currentState.position;\n        this._startValue = this._endValue;\n      }\n      this.setVelocity(0);\n      isAtRest = true;\n    }\n\n    var notifyActivate = false;\n    if (this._wasAtRest) {\n      this._wasAtRest = false;\n      notifyActivate = true;\n    }\n\n    var notifyAtRest = false;\n    if (isAtRest) {\n      this._wasAtRest = true;\n      notifyAtRest = true;\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n  };\n\n  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      if (notifyActivate && listener.onSpringActivate) {\n        listener.onSpringActivate(this);\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this);\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this);\n      }\n    }\n  };\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n\n\n  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest();\n  };\n\n  Spring.prototype.wasAtRest = function wasAtRest() {\n    return this._wasAtRest;\n  };\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n\n\n  Spring.prototype.isAtRest = function isAtRest() {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\n  };\n\n  /**\n   * Force the spring to be at rest at its current position. As\n   * described in the documentation for setCurrentValue, this method\n   * makes it easy to do synchronous non-animated updates to ui\n   * elements that are attached to springs via SpringListeners.\n   * @public\n   */\n\n\n  Spring.prototype.setAtRest = function setAtRest() {\n    this._endValue = this._currentState.position;\n    this._tempState.position = this._currentState.position;\n    this._currentState.velocity = 0;\n    return this;\n  };\n\n  Spring.prototype._interpolate = function _interpolate(alpha) {\n    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\n    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\n  };\n\n  Spring.prototype.getListeners = function getListeners() {\n    return this.listeners;\n  };\n\n  Spring.prototype.addListener = function addListener(newListener) {\n    this.listeners.push(newListener);\n    return this;\n  };\n\n  Spring.prototype.removeListener = function removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove);\n    return this;\n  };\n\n  Spring.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n    return this;\n  };\n\n  Spring.prototype.currentValueIsApproximately = function currentValueIsApproximately(value) {\n    return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();\n  };\n\n  return Spring;\n}();\n\nSpring._ID = 0;\nSpring.MAX_DELTA_TIME_SEC = 0.064;\nSpring.SOLVER_TIMESTEP_SEC = 0.001;\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\n\nvar SpringSystem = function () {\n  function SpringSystem(looper) {\n    classCallCheck(this, SpringSystem);\n    this.listeners = [];\n    this._activeSprings = [];\n    this._idleSpringIndices = [];\n    this._isIdle = true;\n    this._lastTimeMillis = -1;\n    this._springRegistry = {};\n\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  }\n\n  /**\n   * A SpringSystem is iterated by a looper. The looper is responsible\n   * for executing each frame as the SpringSystem is resolved to idle.\n   * There are three types of Loopers described below AnimationLooper,\n   * SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n   * the default as it is the most useful for common UI animations.\n   * @public\n   */\n\n\n  SpringSystem.prototype.setLooper = function setLooper(looper) {\n    this.looper = looper;\n    looper.springSystem = this;\n  };\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {\n    var springConfig = void 0;\n    if (tension === undefined || friction === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with a specified bounciness and speed. To replicate Origami\n   * compositions based on PopAnimation patches, use this factory method to\n   * create matching springs.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithBouncinessAndSpeed = function createSpringWithBouncinessAndSpeed(bounciness, speed) {\n    var springConfig = void 0;\n    if (bounciness === undefined || speed === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {\n    var spring = new Spring(this);\n    this.registerSpring(spring);\n    spring.setSpringConfig(springConfig);\n    return spring;\n  };\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getIsIdle = function getIsIdle() {\n    return this._isIdle;\n  };\n\n  /**\n   * Retrieve a specific Spring from the SpringSystem by id. This\n   * can be useful for inspecting the state of a spring before\n   * or after an integration loop in the SpringSystem executes.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getSpringById = function getSpringById(id) {\n    return this._springRegistry[id];\n  };\n\n  /**\n   * Get a listing of all the springs registered with this\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getAllSprings = function getAllSprings() {\n    var vals = [];\n    for (var _id in this._springRegistry) {\n      if (this._springRegistry.hasOwnProperty(_id)) {\n        vals.push(this._springRegistry[_id]);\n      }\n    }\n    return vals;\n  };\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n\n\n  SpringSystem.prototype.registerSpring = function registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring;\n  };\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n\n\n  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring);\n    delete this._springRegistry[spring.getId()];\n  };\n\n  SpringSystem.prototype.advance = function advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop();\n    }\n    for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n      var spring = this._activeSprings[i];\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0);\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n      }\n    }\n    while (this._idleSpringIndices.length > 0) {\n      var idx = this._idleSpringIndices.pop();\n      idx >= 0 && this._activeSprings.splice(idx, 1);\n    }\n  };\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.loop = function loop(currentTimeMillis) {\n    var listener = void 0;\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1;\n    }\n    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n    this._lastTimeMillis = currentTimeMillis;\n\n    var i = 0;\n    var len = this.listeners.length;\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis);\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true;\n      this._lastTimeMillis = -1;\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n    }\n\n    if (!this._isIdle) {\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n\n\n  SpringSystem.prototype.activateSpring = function activateSpring(springId) {\n    var spring = this._springRegistry[springId];\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring);\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false;\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Add a listener to the SpringSystem to receive before/after integration\n   * notifications allowing Springs to be constrained or adjusted.\n   * @public\n   */\n\n\n  SpringSystem.prototype.addListener = function addListener(listener) {\n    this.listeners.push(listener);\n  };\n\n  /**\n   * Remove a previously added listener on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeListener = function removeListener(listener) {\n    removeFirst(this.listeners, listener);\n  };\n\n  /**\n   * Remove all previously added listeners on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n  };\n\n  return SpringSystem;\n}();\n\nvar index = _extends({}, Loopers, {\n  OrigamiValueConverter: OrigamiValueConverter,\n  MathUtil: MathUtil,\n  Spring: Spring,\n  SpringConfig: SpringConfig,\n  SpringSystem: SpringSystem,\n  util: _extends({}, util, MathUtil)\n});\n\nreturn index;\n\n})));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { __spreadArrays } from \"tslib\";\n/* eslint-disable */\nimport * as React from 'react';\nvar useState = React.useState, useMemo = React.useMemo, useCallback = React.useCallback, useEffect = React.useEffect;\nvar noop = function () { };\nvar createProcess = function (options) { return function (dataTransfer, event) {\n    var uri = dataTransfer.getData('text/uri-list');\n    if (uri) {\n        (options.onUri || noop)(uri, event);\n        return;\n    }\n    if (dataTransfer.files && dataTransfer.files.length) {\n        (options.onFiles || noop)(Array.from(dataTransfer.files), event);\n        return;\n    }\n    if (event.clipboardData) {\n        var text = event.clipboardData.getData('text');\n        (options.onText || noop)(text, event);\n        return;\n    }\n}; };\nvar useDrop = function (options, args) {\n    if (options === void 0) { options = {}; }\n    if (args === void 0) { args = []; }\n    var onFiles = options.onFiles, onText = options.onText, onUri = options.onUri;\n    var _a = useState(false), over = _a[0], setOverRaw = _a[1];\n    var setOver = useCallback(setOverRaw, []);\n    var process = useMemo(function () { return createProcess(options); }, [onFiles, onText, onUri]);\n    useEffect(function () {\n        var onDragOver = function (event) {\n            event.preventDefault();\n            setOver(true);\n        };\n        var onDragEnter = function (event) {\n            event.preventDefault();\n            setOver(true);\n        };\n        var onDragLeave = function () {\n            setOver(false);\n        };\n        var onDragExit = function () {\n            setOver(false);\n        };\n        var onDrop = function (event) {\n            event.preventDefault();\n            setOver(false);\n            process(event.dataTransfer, event);\n        };\n        var onPaste = function (event) {\n            process(event.clipboardData, event);\n        };\n        document.addEventListener('dragover', onDragOver);\n        document.addEventListener('dragenter', onDragEnter);\n        document.addEventListener('dragleave', onDragLeave);\n        document.addEventListener('dragexit', onDragExit);\n        document.addEventListener('drop', onDrop);\n        if (onText) {\n            document.addEventListener('paste', onPaste);\n        }\n        return function () {\n            document.removeEventListener('dragover', onDragOver);\n            document.removeEventListener('dragenter', onDragEnter);\n            document.removeEventListener('dragleave', onDragLeave);\n            document.removeEventListener('dragexit', onDragExit);\n            document.removeEventListener('drop', onDrop);\n            document.removeEventListener('paste', onPaste);\n        };\n    }, __spreadArrays([process], args));\n    return { over: over };\n};\nexport default useDrop;\n"],"sourceRoot":""}